buildscript {
  repositories {
    jcenter()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.13.0"
    classpath "de.thetaphi:forbiddenapis:2.5"
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
    classpath "com.github.jengelman.gradle.plugins:shadow:4.0.1"
    classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.4"
  }
}

group = 'com.com.github.github.wreulicke'

apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: "maven"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "me.champeau.gradle.jmh"

apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "com.diffplug.gradle.spotless"

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(AbstractCompile) each {
  it.options.encoding = "UTF-8"
}

compileJava {
  options.compilerArgs << "-Werror"
  options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

test {
  useJUnitPlatform {
    includeEngines 'junit-jupiter'
  }
}

repositories {
  jcenter()
}

dependencies {
  api 'org.eclipse.collections:eclipse-collections:9.2.0'
  api "com.fasterxml.jackson.core:jackson-databind:2.9.7"
  api "com.fasterxml.jackson.datatype:jackson-datatype-eclipse-collections:2.9.7"

  api "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"

  testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
  testImplementation "org.junit.platform:junit-platform-runner:$junitPlatfromVersion"
  testImplementation "org.junit.platform:junit-platform-launcher:$junitPlatfromVersion" // for IDE

  testImplementation "org.assertj:assertj-core:3.10.0"

  jmh 'org.openjdk.jmh:jmh-core:1.21'
  jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}

configurations {
  jmh.extendsFrom(api)
}

spotless {
  java {
    eclipse().configFile rootProject.files('eclipse-format-settings.xml')
    removeUnusedImports()
    trimTrailingWhitespace()
    endWithNewline()
    indentWithSpaces()
  }
}

forbiddenApisMain {
  bundledSignatures += [
    'jdk-system-out',
    'jdk-unsafe-' + project.sourceCompatibility,
    'jdk-internal-' + project.sourceCompatibility
  ]
  ignoreFailures = false
}

forbiddenApisTest {
  bundledSignatures += [
    'jdk-system-out',
    'jdk-unsafe-' + project.sourceCompatibility,
    'jdk-internal-' + project.sourceCompatibility
  ]
  ignoreFailures = false
}

forbiddenApisJmh {
  bundledSignatures += [
    'jdk-system-out',
    'jdk-unsafe-' + project.sourceCompatibility,
    'jdk-internal-' + project.sourceCompatibility
  ]
  ignoreFailures = false
}

jmh {
  // jmhVersion = '1.20'
}

shadowJar {
  baseName = 'benchmarks'
  from sourceSets.jmh.output
  configurations = [project.configurations.jmh]
  manifest {
    attributes "Main-Class": "org.openjdk.jmh.Main"
  }
}
